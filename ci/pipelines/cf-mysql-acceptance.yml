---
#
# Deploy the cf-mysql release candidate to the "Primo" environment.
# Triggered by updates to the release-candidate branch.
#
resources:
- name: aws-bosh-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-aws-xen-hvm-ubuntu-trusty-go_agent

- name: cf-mysql-ci
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/cf-mysql-ci.git

- name: deployments-configuration
  type: git
  source:
    uri: git@github.com:pivotal-cf/deployments-core-services
    private_key: {{git-private-key}}

- name: cf-mysql-release-rc
  type: git
  source:
    uri: git@github.com:cloudfoundry/cf-mysql-release
    branch: release-candidate
    private_key: {{git-writer-private-key}}

- name: cf-mysql-rc-bucket
  type: s3
  source:
    bucket: cf-mysql-releases
    regexp: release-candidate/cf-mysql-(.*-rc.*)\.tgz
    access_key_id: {{cf-mysql-ci-aws-access-key-id}}
    secret_access_key: {{cf-mysql-ci-aws-secret-access-key}}

- name: aws-acceptance-environment
  type: pool
  source:
    uri: git@github.com:pivotal-cf-experimental/core-services-oss-env-resource-pool
    branch: master
    pool: aws-acceptance
    private_key: {{git-writer-private-key}}

- name: compiled-packages-lock
  type: pool
  source:
    uri: git@github.com:pivotal-cf-experimental/core-services-oss-env-resource-pool
    branch: master
    pool: compiled-packages
    private_key: {{git-writer-private-key}}

- name: acceptance-deployment
  type: bosh-deployment
  source:
    username: {{aws_bosh_username}}
    password: {{aws_bosh_password}}
    deployment: cf-mysql
    ignore_ssl: true

jobs:
- name: claim-aws-environment
  plan:
  - aggregate:
    - get: cf-mysql-release
      resource: cf-mysql-release-rc
      trigger: true
    - put: aws-acceptance-environment
      params:
        acquire: true

- name: delete-acceptance-deployment
  plan:
  - do:
    - timeout: 1h
      aggregate:
      - get: aws-acceptance-environment
        passed: [claim-aws-environment]
        trigger: true
        version: every
      - get: cf-mysql-release
        resource: cf-mysql-release-rc
        passed: [claim-aws-environment]
      - get: cf-mysql-ci
      - get: deployments-configuration
    - try:
        task: run-broker-deregistrar
        config:
          platform: linux
          image_resource: &image_resource
            type: docker-image
            source:
              repository: cloudfoundry/cf-mysql-ci
          inputs:
            - name: cf-mysql-ci
            - name: deployments-configuration
            - name: aws-acceptance-environment
          params:
            ENV_REPO: deployments-configuration
            ENV_TARGET_FILE: aws-acceptance-environment/name
            ENV_METADATA: aws-acceptance-environment/metadata
            ERRAND: broker-deregistrar
            SKIP_IF_NO_DEPLOYMENT: true
            DEPLOYMENT_NAME: cf-mysql
          run:
            path: cf-mysql-ci/scripts/bosh/run_errand
    - task: delete-acceptance-deployment
      config:
        platform: linux
        image_resource: *image_resource
        inputs:
          - name: cf-mysql-ci
          - name: deployments-configuration
          - name: aws-acceptance-environment
        params:
          ENV_TARGET_FILE: aws-acceptance-environment/name
          ENV_METADATA: aws-acceptance-environment/metadata  
          DEPLOYMENT_NAME: cf-mysql
        run:
          path: cf-mysql-ci/scripts/bosh/delete_deployment

- name: deploy-to-acceptance
  plan:
  - do:
    - timeout: 5h
      aggregate:
      - get: cf-mysql-ci
      - get: deployments-configuration
      - get: cf-mysql-release
        resource: cf-mysql-release-rc
        passed: [delete-acceptance-deployment]
      - get: aws-bosh-stemcell
      - get: aws-acceptance-environment
        passed: [delete-acceptance-deployment]
        trigger: true
        version: every
      - get: release-tarball
        resource: cf-mysql-rc-bucket
    - task: make-manifest
      config:
        platform: linux
        image_resource: *image_resource
        inputs:
        - name: cf-mysql-ci
        - name: deployments-configuration
        - name: cf-mysql-release
        - name: aws-acceptance-environment
        outputs:
        - name: deployment-manifest
        params:
          ENV_TARGET_FILE: aws-acceptance-environment/name
          ENV_METADATA: aws-acceptance-environment/metadata
          DEPLOYMENTS_DIR: deployments-configuration
          MANIFEST_DIR: deployment-manifest
        run:
          path: cf-mysql-ci/scripts/bosh/make_manifest
    - put: compiled-packages-lock
      params:
        acquire: true
    - task: compile-release
      config:
        platform: linux
        image_resource: *image_resource
        inputs:
        - name: cf-mysql-ci
        - name: release-tarball
        - name: aws-bosh-stemcell
        outputs:
        - name: compiled-release-tarball
        params:
          BOSH_CLIENT: {{bosh_compilation_username}}
          BOSH_CLIENT_SECRET: {{bosh_compilation_password}}
          BOSH_DIRECTOR: {{bosh_compilation_director}}
        run:
          path: cf-mysql-ci/scripts/compile_release
      ensure:
        put: compiled-packages-lock
        params:
          release: compiled-packages-lock
    - put: acceptance-deployment
      params:
        target_file: aws-acceptance-environment/name
        manifest: deployment-manifest/deployment.yml
        releases: [compiled-release-tarball/*.tgz]
        stemcells: [aws-bosh-stemcell/*.tgz]

- name: run-smoke-tests-acceptance
  plan:
  - do:
    - timeout: 3h
      aggregate:
      - get: aws-acceptance-environment
        passed: [deploy-to-acceptance]
        trigger: true
        version: every
      - get: cf-mysql-release
        resource: cf-mysql-release-rc
        passed: [deploy-to-acceptance]
      - get: cf-mysql-ci
      - get: deployments-configuration
    - task: run-broker-registrar
      config:
        platform: linux
        image_resource: *image_resource
        inputs:
          - name: cf-mysql-ci
          - name: deployments-configuration
          - name: aws-acceptance-environment
        params:
          ENV_REPO: deployments-configuration
          ENV_TARGET_FILE: aws-acceptance-environment/name
          ENV_METADATA: aws-acceptance-environment/metadata  
          ERRAND: broker-registrar
          DEPLOYMENT_NAME: cf-mysql
        run:
          path: cf-mysql-ci/scripts/bosh/run_errand
    - task: run-smoke-tests
      config:
        platform: linux
        image_resource: *image_resource
        inputs:
          - name: cf-mysql-ci
          - name: deployments-configuration
          - name: aws-acceptance-environment
        params:
          ENV_REPO: deployments-configuration
          ENV_TARGET_FILE: aws-acceptance-environment/name
          ENV_METADATA: aws-acceptance-environment/metadata  
          ERRAND: smoke-tests
          DEPLOYMENT_NAME: cf-mysql
        run:
          path: cf-mysql-ci/scripts/bosh/run_errand

- name: release-acceptance-environment
  plan:
  - aggregate:
    - get: cf-mysql-release
      resource: cf-mysql-release-rc
      passed: [run-smoke-tests-acceptance]
    - get: aws-acceptance-environment
      passed: [run-smoke-tests-acceptance]
      trigger: true
      version: every
  - put: aws-acceptance-environment
    params:
      release: aws-acceptance-environment

groups: [{name: cf-mysql-acceptance, jobs: [claim-aws-environment,delete-acceptance-deployment,deploy-to-acceptance,run-smoke-tests-acceptance,release-acceptance-environment]}]
