resource_types:
- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

resources:
- name: bosh-lite-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-warden-boshlite-ubuntu-trusty-go_agent

- name: gcp-bosh-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-ubuntu-trusty-go_agent

- name: deployments-configuration
  type: git
  source:
    uri: git@github.com:pivotal-cf/deployments-core-services
    private_key: ((core-services-ci-credentials/Notes/pcf-mysql-engine-reader-private-key))

- name: cf-mysql-ci
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/cf-mysql-ci.git
    branch: master

- name: cf-deployment-concourse-tasks
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git
    tag_filter: v3.*

- name: cf-acceptance-tests
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-acceptance-tests.git
    branch: master

- name: pxc-release
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/pxc-release.git
    branch: master
    private_key: ((core-services-ci-credentials/Notes/git-writer-private-key))

- name: pxc-release-release-candidate
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/pxc-release.git
    branch: release-candidate
    private_key: ((core-services-ci-credentials/Notes/git-writer-private-key))

- name: cf-deployment-develop
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-deployment.git
    branch: develop

- name: cf-mysql-deployment
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-mysql-deployment.git
    branch: develop

- name: compiled-packages-lock
  type: pool
  source:
    uri: git@github.com:pivotal-cf-experimental/core-services-oss-env-resource-pool
    branch: master
    pool: compiled-packages
    private_key: ((core-services-ci-credentials/Notes/pcf-mysql-engine-writer-private-key))

- name: cf-bosh-deployment
  type: bosh-deployment
  source:
    deployment: cf

- name: bosh-deployment-repo
  type: git
  source:
    uri: https://github.com/cloudfoundry/bosh-deployment

- name: version
  type: semver
  source:
    driver: s3
    bucket: pxc-releases
    access_key_id: ((core-services-ci-credentials/Notes/cf-mysql-ci-aws-access-key-id))
    secret_access_key: ((core-services-ci-credentials/Notes/cf-mysql-ci-aws-secret-access-key))
    key: version
    initial_version: 0.1.0

- name: weekly-trigger
  type: time
  source:
    days:
    - Monday
    interval: 24h

- name: pxc-compiled-release
  type: s3
  source:
    bucket: pxc-releases
    access_key_id: ((core-services-ci-credentials/Notes/cf-mysql-ci-aws-access-key-id))
    secret_access_key: ((core-services-ci-credentials/Notes/cf-mysql-ci-aws-secret-access-key))
    versioned_file: compiled-releases/pxc-ubuntu-trusty.tgz

jobs:
- name: bump-version
  serial_groups: [version-bumper]
  plan:
  - aggregate:
    - get: bosh-lite-stemcell
      trigger: true
    - get: gcp-bosh-stemcell
      trigger: true
    - get: pxc-release
      trigger: true
    - get: weekly-trigger
      trigger: true
    - get: version
    - get: cf-mysql-ci
  - task: gate-on-stemcells
    file: cf-mysql-ci/ci/tasks/create-and-compile-release/gate-on-stemcells.yml
  - put: version
    params:
      pre: rc


- name: create-and-compile-release
  plan:
  - aggregate:
    - get: pxc-release
      passed: [bump-version]
    - get: gcp-bosh-stemcell
      passed: [bump-version]
    - get: bosh-lite-stemcell
      passed: [bump-version]
    - get: version
      passed: [bump-version]
      trigger: true
    - get: cf-mysql-ci
  - task: create-release
    attempts: 3
    file: cf-mysql-ci/ci/tasks/create-release.yml
    input_mapping: {release-repo: pxc-release}
    params:
      RELEASE_NAME: pxc
  - put: compiled-packages-lock
    params:
      acquire: true
  - task: compile-release
    config:
      platform: &platform linux
      image_resource: &image_resource
        type: docker-image
        source:
          repository: cloudfoundry/cf-mysql-ci
      inputs:
      - name: cf-mysql-ci
      - name: release-tarball
      - name: gcp-bosh-stemcell
      outputs:
      - name: compiled-release-tarball
      params:
        BOSH_CLIENT: ((concourse-compilation-director/Notes/BOSH_CLIENT))
        BOSH_CLIENT_SECRET: ((concourse-compilation-director/Notes/BOSH_CLIENT_SECRET))
        BOSH_ENVIRONMENT: ((concourse-compilation-director/Notes/BOSH_ENVIRONMENT))
        BOSH_CA_CERT: ((concourse-compilation-director/Notes/BOSH_CA_CERT))
      run:
        path: cf-mysql-ci/scripts/compile_release
    ensure:
      put: compiled-packages-lock
      params:
        release: compiled-packages-lock
  - put: pxc-compiled-release
    params:
      file: compiled-release-tarball/*.tgz

- name: test-pxc
  plan:
  - aggregate:
    - get: pxc-release
      passed: [create-and-compile-release]
    - get: cf-mysql-ci
    - get: bosh-deployment
      resource: bosh-deployment-repo
    - get: deployments
      resource: deployments-configuration
    - get: stemcell
      resource: bosh-lite-stemcell
      passed: [create-and-compile-release]
    - get: version
      passed: [create-and-compile-release]
      trigger: true
    - get: cf-deployment
      resource: cf-deployment-develop
    - get: cf-deployment-concourse-tasks
    - get: cf-acceptance-tests
    - get: cf-mysql-deployment
    - get: compiled-release-tarball
      resource: pxc-compiled-release
      passed: [create-and-compile-release]
  - task: apply-terraform
    file: cf-mysql-ci/ci/tasks/apply-bosh-lite-terraform.yml
  - task: create-bosh-lite
    file: cf-mysql-ci/ci/tasks/create-bosh-lite.yml
    input_mapping: {deployments: deployments-terraformed}
    params:
      PROJECT_ID: ((core-services-ci-credentials/Notes/gcp-bosh-lite-project-id))
      ZONE: ((core-services-ci-credentials/Notes/gcp-bosh-lite-zone))
      NETWORK: ((core-services-ci-credentials/Notes/gcp-bosh-lite-network))
      SUBNETWORK: ((core-services-ci-credentials/Notes/gcp-bosh-lite-subnetwork))
      BOSH_CLIENT_SECRET: ((core-services-ci-credentials/Notes/bosh-lite-password))
  - aggregate:
    - task: create-dns
      config:
        platform: linux
        image_resource: &image_resource
          type: docker-image
          source:
            repository: cloudfoundry/cf-mysql-ci
        inputs:
        - name: cf-mysql-ci
        - name: bosh-lite-info
        - name: deployments
          path: deployments-core-services
        outputs:
        - name: url
        run:
          path: cf-mysql-ci/scripts/bosh-lite-gcp/create-dns
    - task: delete-stemcell
      file: cf-mysql-ci/ci/tasks/bosh-lite-gcp/delete-stemcell.yml
  - aggregate:
    - task: bosh-upload-stemcell-from-cf-deployment
      file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
      input_mapping: {bbl-state: bosh-lite-info}
      params:
        INFRASTRUCTURE: bosh-lite
    - task: make-cf-manifest
      config:
        platform: linux
        image_resource: *image_resource
        inputs:
        - name: cf-deployment
        - name: cf-mysql-ci
        - name: pxc-release
        - name: url
        outputs:
        - name: cf-deployment-manifest
        - name: varstore
        params:
          PROXY_LB: true
        run:
          path: cf-mysql-ci/scripts/bosh-lite/make-cf-with-pxc-manifest
    - do:
      - task: generate-cloud-config
        file: cf-mysql-ci/ci/tasks/generate-cloud-config.yml
      - task: update-cloud-config
        config:
          platform: linux
          image_resource: *image_resource
          inputs:
          - name: cf-mysql-ci
          - name: cloud-config
          - name: bosh-lite-info
          params:
            BOSH_CLIENT: ((core-services-ci-credentials/Notes/bosh-lite-username))
            BOSH_CLIENT_SECRET: ((core-services-ci-credentials/Notes/bosh-lite-password))
            ENV_TARGET_FILE: bosh-lite-info/director-url
            BOSH_CA_CERT_PATH: bosh-lite-info/ca-cert
            CLOUD_CONFIG: cloud-config/cloud-config.yml
          run:
            path: cf-mysql-ci/scripts/bosh-lite-gcp/update-cloud-config
  - put: cf-bosh-deployment
    params:
      manifest: cf-deployment-manifest/cf.yml
      releases:
      - compiled-release-tarball/*.tgz
      stemcells:
      - stemcell/*.tgz
      source_file: bosh-lite-info/bosh-deployment-resource-source-file
  - task: test-galera-encryption
    config:
      platform: linux
      image_resource: *image_resource
      inputs:
        - name: cf-mysql-ci
        - name: bosh-lite-info
        - name: varstore
      run:
        path: cf-mysql-ci/scripts/tls/test-galera-encryption
  - task: run-cats
    attempts: 3
    config:
      platform: linux
      image_resource: *image_resource
      inputs:
        - name: cf-mysql-ci
        - name: cf-acceptance-tests
        - name: url
        - name: varstore
      run:
        path: cf-mysql-ci/scripts/bosh-lite/run-cats
  - put: pxc-release-release-candidate
    params:
      repository: pxc-release
  - task: delete-cf-deployment
    config:
      platform: linux
      image_resource: *image_resource
      inputs:
      - name: cf-mysql-ci
      - name: bosh-lite-info
      params:
        BOSH_CLIENT: ((core-services-ci-credentials/Notes/bosh-lite-username))
        BOSH_CLIENT_SECRET: ((core-services-ci-credentials/Notes/bosh-lite-password))
        BOSH_DEPLOYMENT: cf
        BOSH_CA_CERT: bosh-lite-info/ca-cert
        ENV_TARGET_FILE: bosh-lite-info/external-ip
      run:
        path: cf-mysql-ci/scripts/bosh/delete_deployment_no_env_metadata
  - task: destroy-bosh-lite
    file: cf-mysql-ci/ci/tasks/destroy-bosh-lite.yml
    input_mapping: {bosh-lite-info: bosh-lite-info-stemcell-deleted}
  - task: destroy-terraform
    file: cf-mysql-ci/ci/tasks/destroy-bosh-lite-terraform.yml
    input_mapping: {deployments: deployments-terraformed}
  - task: delete-dns
    config:
      platform: linux
      image_resource: *image_resource
      inputs:
      - name: cf-mysql-ci
      - name: bosh-lite-info
      - name: url
      - name: deployments
        path: deployments-core-services
      run:
        path: cf-mysql-ci/scripts/bosh-lite-gcp/delete-dns

- name: final-release
  serial_groups: [version-bumper]
  plan:
    - aggregate:
      - get: pxc-release
        passed: [test-pxc]
      - get: cf-mysql-ci
      - get: version
        passed: [test-pxc]
        params:
          bump: final
    - task: create-release
      file: cf-mysql-ci/ci/tasks/create-release.yml
      input_mapping: {release-repo: pxc-release}
      output_mapping: {release-repo-modified: pxc-release-final}
      params:
        RELEASE_NAME: pxc
        BLOBS_BUCKET_NAME: ((pxc-release-private.yml/Notes/bucket_name))
        FINAL: true
        SHA2: true
        AWS_ACCESS_KEY_ID: ((pxc-release-private.yml/Notes/access_key_id))
        AWS_SECRET_ACCESS_KEY: ((pxc-release-private.yml/Notes/secret_access_key))
    - task: commit-final-release-changes
      config:
        platform: *platform
        image_resource: *image_resource
        inputs:
        - name: cf-mysql-ci
        - name: pxc-release-final
        - name: commit-message
        outputs:
        - name: pxc-release-committed
        params:
          GIT_COMMIT_MESSAGE: commit-message/commit-message
          REPO_DIR: pxc-release-final
          OUTPUT_DIR: pxc-release-committed
        run:
          path: cf-mysql-ci/scripts/publish/git-commit-changes
    - put: pxc-release
      params:
        repository: pxc-release-committed/pxc-release-final
        tag: version/version
        tag_prefix: v
    - put: version
      params:
        bump: minor
        pre: rc
