#!/bin/bash
set -eu

my_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
scripts_dir="$( cd "${my_dir}/../" && pwd )"
workspace_dir="$( cd "${my_dir}/../../../" && pwd )"

cf_mysql_release_dir="${workspace_dir}/cf-mysql-release"
OUTPUT_DIR="${workspace_dir}/${OUTPUT_DIR}"
BOSH_DEPLOYMENT_DIR="${workspace_dir}/${BOSH_DEPLOYMENT_DIR}"
DEPLOYMENTS_DIR="${workspace_dir}/${DEPLOYMENTS_DIR}"
STEMCELL_DIR="${workspace_dir}/${STEMCELL_DIR}"
BOSH_WARDEN_CPI_RELEASE_DIR="${workspace_dir}/${BOSH_WARDEN_CPI_RELEASE_DIR}"
GARDEN_LINUX_RELEASE_DIR="${workspace_dir}/${GARDEN_LINUX_RELEASE_DIR}"

: "${PROJECT_ID}"
: "${ZONE}"
: "${NETWORK}"
: "${SUBNETWORK}"

source "${scripts_dir}/create_release_override"

bosh_warden_cpi_release_override="${OUTPUT_DIR}/bosh-warden-cpi-release-override"
override_for_release "${BOSH_WARDEN_CPI_RELEASE_DIR}" \
  > "${bosh_warden_cpi_release_override}"

garden_linux_release_override="${OUTPUT_DIR}/garden-linux-release-override"
override_for_release "${GARDEN_LINUX_RELEASE_DIR}" \
  > "${garden_linux_release_override}"

bosh_lite_dir="${DEPLOYMENTS_DIR}/bosh-lite-gcp"

pushd "${bosh_lite_dir}" > /dev/null
  terraform output lite-external-ip > "${OUTPUT_DIR}/external-ip"
popd > /dev/null

gobosh interpolate "${BOSH_DEPLOYMENT_DIR}/bosh.yml" \
  -o "${BOSH_DEPLOYMENT_DIR}/gcp/cpi.yml" \
  -o "${BOSH_DEPLOYMENT_DIR}/bosh-lite.yml" \
  -o "${BOSH_DEPLOYMENT_DIR}/external-ip-not-recommended.yml" \
  -o "${BOSH_DEPLOYMENT_DIR}/jumpbox-user.yml" \
  -o "${bosh_lite_dir}/dynamic-network.yml" \
  -o "${bosh_lite_dir}/instance.yml" \
  -o "${bosh_warden_cpi_release_override}" \
  -o "${garden_linux_release_override}" \
  --vars-store "${OUTPUT_DIR}/credentials.yml" \
  -v director_name=lite \
  -v internal_ip=127.0.0.1 \
  -v external_ip="$(cat "${OUTPUT_DIR}/external-ip")" \
  --var-file gcp_credentials_json="${bosh_lite_dir}/ci-service-account.json" \
  -v project_id="${PROJECT_ID}" \
  -v zone="${ZONE}" \
  -v network="${NETWORK}" \
  -v subnetwork="${SUBNETWORK}" > "${OUTPUT_DIR}/manifest.yml"

gobosh create-env "${OUTPUT_DIR}/manifest.yml" \
  -v admin_password="${BOSH_PASSWORD}" \
  --state "${OUTPUT_DIR}/bosh-state.json" \
  --vars-store "${OUTPUT_DIR}/credentials.yml"

gobosh -n interpolate "${OUTPUT_DIR}/credentials.yml" \
  --path /director_ssl/ca > "${OUTPUT_DIR}/ca-cert"

gobosh -n interpolate "${OUTPUT_DIR}/credentials.yml" \
  --path /admin_password > "${OUTPUT_DIR}/admin-password"

gobosh -n upload-stemcell "${STEMCELL_DIR}"/*.tgz \
  -e "$(cat "${OUTPUT_DIR}/external-ip")" \
  --user admin \
  --password "$(cat "${OUTPUT_DIR}/admin-password")" \
  --ca-cert "${OUTPUT_DIR}/ca-cert"

gobosh -n update-cloud-config "${cf_mysql_release_dir}/manifest-generation/bosh2.0/bosh-lite/cloud-config.yml" \
  -e "$(cat "${OUTPUT_DIR}/external-ip")" \
  --user admin \
  --password "$(cat "${OUTPUT_DIR}/admin-password")" \
  --ca-cert "${OUTPUT_DIR}/ca-cert"
