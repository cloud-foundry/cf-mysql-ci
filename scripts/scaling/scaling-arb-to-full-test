#!/bin/bash

set -eux

tmpdir=$(mktemp -d /tmp/mysql_scaling.XXXXX)
trap '{ rm -rf ${tmpdir}; }' EXIT

MY_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
CI_DIR="$( cd "${MY_DIR}/../../" && pwd )"
WORKSPACE_DIR="$( cd "${MY_DIR}/../../../" && pwd )"

: "${ENV_TARGET_FILE:?}"
: "${BOSH_DEPLOYMENT:?}"
: "${BOSH_CLIENT:?}"
: "${BOSH_CLIENT_SECRET:?}"

export BOSH_ENVIRONMENT="$(cat "${ENV_TARGET_FILE}")"
export BOSH_CA_CERT="${WORKSPACE_DIR}/bosh-lite-info/ca-cert"

source "${MY_DIR}/scaling-helpers-ondemand"
mysql_ip1=$(bosh -d cf-mysql vms --json | jq -r '.Tables[].Rows[]|select(.instance|contains("mysql"))|select(.az|contains("z1"))|.ips')
mysql_ip2=$(bosh -d cf-mysql vms --json | jq -r '.Tables[].Rows[]|select(.instance|contains("mysql"))|select(.az|contains("z2"))|.ips')
mysql_ip3=$(bosh -d cf-mysql vms --json | jq -r '.Tables[].Rows[]|select(.instance|contains("mysql"))|select(.az|contains("z3"))|.ips')
# After deploy_full_cluster, the third mysql node will be in z1
setup_infrastructure_variables ${mysql_ip1} ${mysql_ip2} ${mysql_ip3} 

pushd "${MY_DIR}"
  bundle install
popd

clear_data
write_some_data 1000

deploy_full_cluster #this step removes the arbitrator
verify_replicated_row_count_is 1000

scale_down_to_minimal
write_some_data 1000
verify_first_node_row_count_is 2000

echo "Success!"
