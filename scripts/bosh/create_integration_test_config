#!/bin/bash

set -eu

MY_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
CI_DIR="$( cd ${MY_DIR}/../.. && pwd )"

OK_COLOR='\033[1;32m'
ACTION_COLOR='\033[1;33m'
INFO_COLOR='\033[1;36m'
NO_COLOR='\033[0m'

source ${CI_DIR}/scripts/utils.sh

# required
: "${ENV_METADATA:?}"

# optional
: "${CONFIG_LOCATION:=${CI_DIR}/integration-config.json}"
: "${USE_SMALL_PLANS:=false}"
: "${USE_HTTPS:=true}"
: "${PROXY_COUNT:=2}"
: "${NEW_STYLE_PROXY_URL:=false}"

# optional, only needed for failover test
: "${BROKER_0_REMOTE_IP:=}"
: "${BROKER_1_REMOTE_IP:=}"
: "${MYSQL_NODE_0_REMOTE_IP:=}"
: "${BROKER_0_LOCAL_PORT:=}"
: "${BROKER_1_LOCAL_PORT:=}"
: "${MYSQL_NODE_0_LOCAL_PORT:=}"

echo -e "Creating config file at ${INFO_COLOR}${CONFIG_LOCATION}${NO_COLOR}..."

CF_API_USER="$(jq_val "cf_api_user" "${ENV_METADATA}")"
CF_API_PASSWORD="$(jq_val "cf_api_password" "${ENV_METADATA}")"
PROXY_API_USER="$(jq_val "proxy_api_user" "${ENV_METADATA}")"
PROXY_API_PASSWORD="$(jq_val "proxy_api_password" "${ENV_METADATA}")"
DOMAIN="$(jq_val "domain" "${ENV_METADATA}")"

if [ "${USE_HTTPS}" = true ]; then
  PROTOCOL="https"
else
  PROTOCOL="http"
fi

if [ "${USE_SMALL_PLANS}" = true ]; then
  SMALL_PLAN_SIZE=10
  SMALL_PLAN_NAME=10mb
  LARGE_PLAN_SIZE=20
  LARGE_PLAN_NAME=20mb
else
  SMALL_PLAN_SIZE=100
  SMALL_PLAN_NAME=100mb
  LARGE_PLAN_SIZE=1000
  LARGE_PLAN_NAME=1gb
fi

API_URL="https://proxy-p-mysql.${DOMAIN}"

if [ "${PROXY_COUNT}" == 0 ]; then
  DASHBOARD_URLS="[]"
elif [ "${PROXY_COUNT}" == 1 ]; then
  if [ "${NEW_STYLE_PROXY_URL}" == "true" ]; then
    DASHBOARD_URLS="[\"https://0-proxy-p-mysql.${DOMAIN}\"]"
  else
    DASHBOARD_URLS="[\"https://proxy-0-p-mysql.${DOMAIN}\"]"
  fi
else
  if [ "${NEW_STYLE_PROXY_URL}" == "true" ]; then
    DASHBOARD_URLS="[\"https://0-proxy-p-mysql.${DOMAIN}\", \"https://0-proxy-p-mysql.${DOMAIN}\"]"
  else
    DASHBOARD_URLS="[\"https://proxy-0-p-mysql.${DOMAIN}\", \"https://proxy-1-p-mysql.${DOMAIN}\"]"
  fi
fi

cat > ${CONFIG_LOCATION} <<EOF
{
  "api": "${PROTOCOL}://api.${DOMAIN}",
  "apps_domain": "${DOMAIN}",
  "admin_user": "${CF_API_USER}",
  "admin_password": "${CF_API_PASSWORD}",
  "broker_host": "p-mysql.${DOMAIN}",
  "service_name": "p-mysql",
  "plans" : [
    {
      "name": "${SMALL_PLAN_NAME}",
      "max_user_connections": 20,
      "max_storage_mb": ${SMALL_PLAN_SIZE}
    },
    {
      "name": "${LARGE_PLAN_NAME}",
      "max_user_connections": 40,
      "max_storage_mb": ${LARGE_PLAN_SIZE}
    }
  ],
  "skip_ssl_validation": true,
  "timeout_scale": 1.0,
  "proxy": {
    "dashboard_urls": ${DASHBOARD_URLS},
    "api_url": "${API_URL}",
    "api_username":"${PROXY_API_USER}",
    "api_password":"${PROXY_API_PASSWORD}",
    "api_force_https": ${USE_HTTPS},
    "skip_ssl_validation": true
  },
  "brokers": [
    {
      "ip": "${BROKER_0_REMOTE_IP}",
      "ssh_tunnel": "127.0.0.1:${BROKER_0_LOCAL_PORT}"
    },
    {
      "ip": "${BROKER_1_REMOTE_IP}",
      "ssh_tunnel": "127.0.0.1:${BROKER_1_LOCAL_PORT}"
    }
  ],
  "mysql_nodes": [
    {
      "ip": "${MYSQL_NODE_0_REMOTE_IP}",
      "ssh_tunnel": "127.0.0.1:${MYSQL_NODE_0_LOCAL_PORT}"
    }
  ]
}
EOF

echo -e "${OK_COLOR}OK${NO_COLOR}"

echo -e "
TIP: Export the environment variable with the following command:

${ACTION_COLOR}export CONFIG=${CONFIG_LOCATION}${NO_COLOR}"
