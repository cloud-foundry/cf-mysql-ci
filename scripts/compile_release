#!/bin/bash

set -eux

MY_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
WORKSPACE_DIR="$( cd "${MY_DIR}/../.." && pwd )"
OUTPUT_DIR="${WORKSPACE_DIR}/${OUTPUT_DIR:-compiled-release-tarball}"
DEPLOYMENT_NAME=d-$(cat /proc/sys/kernel/random/uuid)

source "${MY_DIR}/utils.sh"

RELEASE_TARBALL_DIR=${RELEASE_TARBALL_DIR:-release-tarball}
RELEASE_TARBALL_DIR="${WORKSPACE_DIR}/${RELEASE_TARBALL_DIR}"
export RELEASE_TARBALL_DIR

RELEASE_FILENAME=${RELEASE_FILENAME:-tgz}

RELEASE_FILE=$(ls ${RELEASE_TARBALL_DIR}/ | grep ${RELEASE_FILENAME})
export RELEASE_FILE

name=$(release_name)
version=$(release_version)

# egrep for pivnet-resource stemcells that will have the etag after the version
stemcell_version=$(cat *stemcell/version | egrep -o '^[0-9.]+')

pushd "${WORKSPACE_DIR}"
  cat << EOF > deployment.yml
---
name: ${DEPLOYMENT_NAME}

director_uuid: 8797c2a6-c620-4192-a1b8-fc71dec6e995

releases:
- name: ${name}
  version: "${version}"
  url: "file://${RELEASE_TARBALL_DIR}/${RELEASE_FILE}"

stemcells:
- alias: default
  os: ubuntu-trusty
  version: "${stemcell_version}"

jobs: []

update:
  canaries: 1
  max_in_flight: 1
  canary_watch_time: 1000-90000
  update_watch_time: 1000-90000
EOF

  echo "Targeting ${BOSH_ENVIRONMENT}"
  set +x
    bosh -u ${BOSH_CLIENT} -p ${BOSH_CLIENT_SECRET} target ${BOSH_ENVIRONMENT}
    bosh login ${BOSH_CLIENT} ${BOSH_CLIENT_SECRET}
  set -x

  bosh deployment deployment.yml
  bosh upload stemcell *stemcell/*.tgz --skip-if-exists
  bosh -n deploy

  bosh export release ${name}/${version} ubuntu-trusty/${stemcell_version}

  mv release*.tgz ${OUTPUT_DIR}/

  bosh -n delete deployment ${DEPLOYMENT_NAME}
popd
