#!/bin/bash

set -eux

MY_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
WORKSPACE_DIR="$( cd "${MY_DIR}/../.." && pwd )"
OUTPUT_DIR="${WORKSPACE_DIR}/${OUTPUT_DIR:-compiled-release-tarball}"
DEPLOYMENT_NAME=d-$(cat /proc/sys/kernel/random/uuid)
STEMCELL_VERSION=$(cat *stemcell/version)
RELEASE_NAME=$(ls release-tarball/ | sed 's/\(.*\)-[0-9].*/\1/')
RELEASE_VERSION=$(ls release-tarball/ | sed 's/.*-\([0-9].*\).tgz/\1/')
RELEASE_FILE=$(ls release-tarball/)

pushd "${WORKSPACE_DIR}"
  cat << EOF > deployment.yml
---
name: ${DEPLOYMENT_NAME}

director_uuid: 28dc9bd9-c145-4048-b4b1-7e3582a51e9f

releases:
- name: ${RELEASE_NAME}
  version: "${RELEASE_VERSION}"
  url: "file://${WORKSPACE_DIR}/release-tarball/${RELEASE_FILE}"

stemcells:
- alias: default
  os: ubuntu-trusty
  version: ${STEMCELL_VERSION}

jobs: []

update:
  canaries: 1
  max_in_flight: 1
  canary_watch_time: 1000-90000
  update_watch_time: 1000-90000
EOF
  set +x
    bosh -u ${BOSH_USERNAME} -p ${BOSH_PASSWORD} target ${BOSH_DIRECTOR}
    bosh login ${BOSH_USERNAME} ${BOSH_PASSWORD}
  set -x

  bosh deployment deployment.yml
  bosh upload stemcell *stemcell/*.tgz --skip-if-exists
  bosh -n deploy

  bosh export release ${RELEASE_NAME}/${RELEASE_VERSION} ubuntu-trusty/${STEMCELL_VERSION}

  mv release*.tgz ${OUTPUT_DIR}/

  bosh -n delete deployment ${DEPLOYMENT_NAME}
popd
