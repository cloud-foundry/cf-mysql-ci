#!/bin/bash
set -eux

MY_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
CI_DIR="$( cd ${MY_DIR}/../../ && pwd )"
WORKSPACE_DIR="$( cd ${MY_DIR}/../../.. && pwd )"

: "${BOSH_SSH_KEY:?}"
: "${ENV_TARGET_FILE:?}"
: "${ENV_METADATA:?}"
: "${DEPLOYMENT_NAME:?}"

source ${CI_DIR}/scripts/utils.sh

BOSH_TARGET="$(cat "${ENV_TARGET_FILE}")"

export BOSH_ENVIRONMENT="$(sslip_from_ip "${DIRECTOR_IP}")"
export BOSH_DEPLOYMENT="cf-mysql"
export BOSH_CLIENT="$(jq_val "bosh_user" "${ENV_METADATA}")"
export BOSH_CLIENT_SECRET="$(jq_val "bosh_password" "${ENV_METADATA}")"

MYSQL_TUNNEL_IP=127.0.0.1
MYSQL_TUNNEL_PORT=3307
MYSQL_TUNNEL_USERNAME=ubuntu
MYSQL_VM_IP=10.244.7.2
MYSQL_VM_PORT=3306
GCACHE_SIZE_PLUS_ONE=129

function close-ssh-tunnels() {
  echo "Closing SSH tunnels ..."
  OLD_TUNNELS=`ps aux | grep "ssh" | grep "\-L $MYSQL_TUNNEL_PORT" | awk '{print $2}'`
  [[ -z "${OLD_TUNNELS}" ]] || kill ${OLD_TUNNELS}
}

function open_ssh_tunnel_to_bosh_lite() {
  SSH_KEY_FILE="bosh-lite-key"
  echo "${BOSH_SSH_KEY}" > "${SSH_KEY_FILE}"
  chmod 600 "${SSH_KEY_FILE}"

  ssh -L ${MYSQL_TUNNEL_PORT}:${MYSQL_VM_IP}:${MYSQL_VM_PORT} \
    -nNTf \
    -o StrictHostKeyChecking=no \
    -i "${SSH_KEY_FILE}" \
    ${MYSQL_TUNNEL_USERNAME}@${BOSH_TARGET}
}

function stop_mysql_z2_0() {
  bosh2 -n stop mysql_z2/0
}

function write_data_to_overflow_gcache() {

  MYSQL_HOST=${MYSQL_TUNNEL_IP}
  MYSQL_PORT=${MYSQL_TUNNEL_PORT}

  mysql --host=${MYSQL_HOST} \
    --port=${MYSQL_PORT} \
    --user=root \
    --password=password < ${MY_DIR}/setup-test-data-schema.sql

  for i in `seq 1 ${GCACHE_SIZE_PLUS_ONE}`;
  do
    echo "INSERT INTO test_table(id, text) VALUES ('${i}', REPEAT('A', 1024 * 1024));"
  done |  mysql --host=${MYSQL_HOST} \
    --port=${MYSQL_PORT} \
    --user=root \
    --password=password \
    --database=mysql_data_loss_test
}

function attempt_to_start_mysql_z2_0() {
  set +e
  bosh2 -n start mysql_z2/0
  set -e
}

function assert_mysql_z2_did_not_join() {
  for i in $(seq 1 10); do
    cluster_size=$(mysql --host=${MYSQL_HOST} \
      --port=${MYSQL_PORT} \
      --user=root \
      --password=password \
      --skip-column-names \
      --silent \
      -e "show status like 'wsrep_cluster_size'" 2>/dev/null | awk '{print $NF}')

    echo "Attempt #${i}: Cluster size is: ${cluster_size}"

    if [ "${cluster_size}" == "2" ]; then
      exit 0
    fi
    sleep 1
  done

  echo "Cluster size never converged to 2, is at: ${cluster_size}"
  exit 1
}

trap close-ssh-tunnels EXIT

open_ssh_tunnel_to_bosh_lite
stop_mysql_z2_0
write_data_to_overflow_gcache
attempt_to_start_mysql_z2_0
assert_mysql_z2_did_not_join
