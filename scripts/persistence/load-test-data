#!/bin/bash

set -eux

MY_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
WORKSPACE_DIR="$( cd ${MY_DIR}/../../.. && pwd )"

# SQL_QUERY_DIR lives 1 level below.
SQL_QUERY_DIR=$( cd ${MY_DIR}/test-data && pwd )

MYSQL_TUNNEL_IP=127.0.0.1
MYSQL_TUNNEL_PORT=3307
MYSQL_VM_IP=10.244.7.2
MYSQL_VM_PORT=3306

DIRECTOR_TARGET_FILE=${DIRECTOR_TARGET_FILE:-}

if [ -n "${DIRECTOR_TARGET_FILE}" ]; then
  echo "Targeting remote bosh-lite, starting ssh tunnel..."

  BOSH_DIRECTOR_IP=$(cat ${DIRECTOR_TARGET_FILE})

  BOSH_LITE_SSH_KEY="${BOSH_LITE_SSH_KEY:?}"
  SSH_KEY_FILE="bosh-lite-key"
  echo "${BOSH_LITE_SSH_KEY}" > "${SSH_KEY_FILE}"
  chmod 600 "${SSH_KEY_FILE}"

  if [ -z "${BOSH_DIRECTOR_IP}" ]; then
    echo "BOSH target file is empty"
    exit 1
  fi

  function close-ssh-tunnels() {
    echo "Closing SSH tunnels ..."
    OLD_TUNNELS=`ps aux | grep "ssh" | grep "\-L $MYSQL_TUNNEL_PORT" | awk '{print $2}'`
    [[ -z "${OLD_TUNNELS}" ]] || kill ${OLD_TUNNELS}
  }

  # open SSH tunnel to mysql container on bosh-lite
  trap close-ssh-tunnels EXIT
  ssh -L ${MYSQL_TUNNEL_PORT}:${MYSQL_VM_IP}:${MYSQL_VM_PORT} \
    -nNTf \
    -o StrictHostKeyChecking=no \
    -i "${SSH_KEY_FILE}" \
    ubuntu@${BOSH_DIRECTOR_IP}

  MYSQL_HOST=${MYSQL_TUNNEL_IP}
  MYSQL_PORT=${MYSQL_TUNNEL_PORT}
else
  echo "Targeting local bosh-lite"

  MYSQL_HOST=${MYSQL_VM_IP}
  MYSQL_PORT=${MYSQL_VM_PORT}
fi

pushd ${SQL_QUERY_DIR}
  echo "Inserting test data..."

  mysql --host=${MYSQL_HOST} \
    --port=${MYSQL_PORT} \
    --user=root \
    --password=password \
    < clean-bosh-lite-test-database.sql

  mysql --host=${MYSQL_HOST} \
    --port=${MYSQL_PORT} \
    --user=root \
    --password=password \
    --local-infile \
    mysql_persistence_test \
    < insert-test-data.sql
popd

echo "Successfully inserted test data"
